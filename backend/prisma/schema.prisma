generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String       @id @default(uuid())
  email    String       @unique
  password String
  name     String
  role     Role         @default(USER)
  posts    Post[]
  comments Comment[]
  likes    Like[]

  following Follow[] @relation("UserFollowing")
  followers Follow[] @relation("UserFollowers")
}

model Follow {
  id           Int     @id @default(autoincrement())
  followerId   String
  followingId  String

  follower     User @relation("UserFollowers", fields: [followerId], references: [id], onDelete: Cascade)
  following    User @relation("UserFollowing", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
}

model Post {
  id         String     @id @default(uuid())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  title      String
  published  Boolean    @default(false)
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String
  categories Category[]
  content    Content[]  @relation("PostContent")
  comments   Comment[]
  likes      Like[]
}

model Content {
  id       String     @id @default(uuid())
  type     String
  content  String?
  imageUrl String?
  order    Int
  postId   String
  post     Post       @relation("PostContent", fields: [postId], references: [id])
}

model Category {
  id    String   @id @default(uuid())
  name  String   @unique
  posts Post[]
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post      @relation(fields: [postId], references: [id])
  postId    String
  parentId  String?
  parent    Comment?  @relation("CommentReplies", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentReplies")
}

model Like {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  post      Post      @relation(fields: [postId], references: [id])
  postId    String
}

enum Role {
  USER
  ADMIN
  EDITOR
}